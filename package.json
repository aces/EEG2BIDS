{
  "name": "pycat",
  "description": "pycat - iEEG to BIDS format Wizard",
  "version": "1.0.0",
  "dependencies": {
    "@electron/remote": "^1.1.0",
    "electron-log": "^4.3.5",
    "electron-store": "^8.0.0",
    "prop-types": "^15.7.2",
    "react": "^17.0.2",
    "react-color": "^2.19.3",
    "react-dom": "^17.0.2",
    "react-router-dom": "^5.2.0",
    "react-scripts": "^4.0.2",
    "socket.io-client": "^4.1.2"
  },
  "devDependencies": {
    "@babel/core": "^7.14.3",
    "@babel/eslint-parser": "^7.14.3",
    "concurrently": "^6.1.0",
    "cross-env": "^7.0.3",
    "electron": "^12.0.9",
    "electron-builder": "^22.11.4",
    "electron-devtools-installer": "^3.2.0",
    "eslint": "^7.27.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-import": "^2.23.3",
    "eslint-plugin-jsx": "^0.1.0",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-react": "^7.23.2",
    "lint-staged": "^11.0.0",
    "wait-on": "^5.3.0"
  },
  "scripts": {
    "rebuild": "rebuild --runtime=electron --target=11.2.1",
    "react-start": "cross-env BROWSER=NONE react-scripts start",
    "electron-start": "cross-env DEV=1 electron .",
    "start": "concurrently \"npm run react-start\" \"wait-on http://localhost:3000/ && npm run electron-start\"",
    "react-build": "cross-env INLINE_RUNTIME_CHUNK=false react-scripts build",
    "pack": "electron-builder --dir -c.extraMetadata.main=build/electron.js",
    "electron-build-linux": "electron-builder --linux -c.extraMetadata.main=build/electron.js",
    "electron-build-windows": "electron-builder --win -c.extraMetadata.main=build/electron.js",
    "electron-build-mac": "electron-builder --mac -c.extraMetadata.main=build/electron.js",
    "build-linux": "npm run react-build && npm run electron-build-linux",
    "build-windows": "npm run react-build && npm run electron-build-windows",
    "build-mac": "npm run react-build && npm run electron-build-mac",
    "build": "npm run react-build && npm run electron-build-linux && npm run electron-build-windows & npm run electron-build-mac",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "lint-staged": {
    "src/**/*.{js,jsx,json,css,md}": [
      "eslint --fix src",
      "git add"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "homepage": "./",
  "main": "public/electron.js",
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "author": {
    "name": "AlizÃ©e Wickenheiser",
    "email": "alizee.wickenheiser@mcgill.ca",
    "url": "https://github.com/aces/pycat"
  },
  "build": {
    "appId": "mni.aces.pycat",
    "productName": "pycat",
    "copyright": "Open Source",
    "asar": false,
    "linux": {
      "target": [
        "deb",
        "snap"
      ],
      "category": "Utility"
    },
    "snap": {
      "confinement": "classic"
    },
    "win": {
      "icon": "./public/logo512.png",
      "target": [
        "nsis"
      ],
      "legalTrademarks": "Open Source",
      "signingHashAlgorithms": [
        "sha1",
        "sha256"
      ]
    },
    "mac": {
      "target": [
        "default"
      ],
      "icon": "./public/logo512.icns",
      "category": "public.app-category.medical",
      "gatekeeperAssess": false,
      "extendInfo": {
        "CFBundleDocumentTypes": [
          {
            "CFBundleTypeName": "Folders",
            "CFBundleTypeRole": "Viewer",
            "LSHandlerRank": "Alternate",
            "LSItemContentTypes": [
              "public.folder",
              "com.apple.bundle",
              "com.apple.package",
              "com.apple.resolvable"
            ]
          },
          {
            "CFBundleTypeName": "UnixExecutables",
            "CFBundleTypeRole": "Shell",
            "LSHandlerRank": "Alternate",
            "LSItemContentTypes": [
              "public.unix-executable"
            ]
          }
        ],
        "NSDesktopFolderUsageDescription": "pyCat wants to access the Desktop folder.",
        "NSDocumentsFolderUsageDescription": "pyCat wants to access the Documents folder.",
        "NSDownloadsFolderUsageDescription": "pyCat wants to access the Downloads folder.",
        "NSFileProviderDomainUsageDescription": "pyCat wants to access files managed by a file provider.",
        "NSSystemAdministrationUsageDescription": "The operation being performed by pyCat requires elevated permission."
      }
    },
    "nsis": {
      "oneClick": true
    },
    "files": [
      "build/**/*",
      "node_modules/**/*",
      "utils/**/*",
      "python/**/*",
      "dist",
      "dist/pycat-service.app",
      "public/*",
      "package.json"
    ],
    "extraResources": [
      "public/preload.js"
    ],
    "directories": {
      "buildResources": "public"
    }
  }
}
